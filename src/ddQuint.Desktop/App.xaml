<Application x:Class="ddQuint.Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:ddQuint.Desktop.Converters"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <!-- Global Font: Prefer Inter (bundled), then Inter (installed), then system fallbacks -->
        <Style TargetType="{x:Type Control}">
            <Setter Property="FontFamily" Value="pack://application:,,,/Assets/Fonts/Inter/InterVariable.ttf#Inter, Inter, Segoe UI, Helvetica Neue, Arial"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        <!-- Converters -->
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:BooleanAndConverter x:Key="BooleanAndConverter"/>
        <converters:MultiplyConverter x:Key="MultiplyConverter"/>
        <converters:WellStatusToBrushConverter x:Key="WellStatusToBrushConverter"/>
        <converters:StringHasValueToVisibilityConverter x:Key="StringHasValueToVisibilityConverter"/>
        <converters:InverseStringHasValueToVisibilityConverter x:Key="InverseStringHasValueToVisibilityConverter"/>
        <converters:ThumbnailImageConverter x:Key="ThumbnailImageConverter"/>
        
        <!-- Updated Dark Mode Colors -->
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#262524"/>
        <SolidColorBrush x:Key="SidebarBackgroundBrush" Color="#323232"/>
        <SolidColorBrush x:Key="ContentBackgroundBrush" Color="#323232"/>
        <SolidColorBrush x:Key="BorderBrush" Color="#5C5B5A"/>
        <SolidColorBrush x:Key="TextBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="SecondaryTextBrush" Color="#AAAAAA"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#626161"/>
        <SolidColorBrush x:Key="HoverBrush" Color="#4A4A4A"/>
        <SolidColorBrush x:Key="PressedBrush" Color="#5A5A5A"/>
        <SolidColorBrush x:Key="SelectionBrush" Color="#1778DF"/>
        <SolidColorBrush x:Key="DropdownBackgroundBrush" Color="#292826"/>
        
        <!-- ToolTip appearance -->
        <SolidColorBrush x:Key="ToolTipBackgroundBrush" Color="#282727"/>
        <Style TargetType="ToolTip">
            <Setter Property="Background" Value="{StaticResource ToolTipBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="MaxWidth" Value="380"/>
        </Style>
        
        <!-- Settings-specific colors -->
        <SolidColorBrush x:Key="SettingsAccentBrush" Color="#626161"/>
        <SolidColorBrush x:Key="SettingsPopupBrush" Color="#6C6B6B"/>
        
        <!-- Status indicator colors (matching macOS exactly) -->
        <SolidColorBrush x:Key="NormalIndicatorBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="BufferZoneIndicatorBrush" Color="#666666"/>
        <SolidColorBrush x:Key="DeviationIndicatorBrush" Color="#D86DCD"/>
        <SolidColorBrush x:Key="WarningIndicatorBrush" Color="#FF0000"/>
        
        <!-- Global text styles -->
        <Style TargetType="Label">
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        
        <Style TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
        
        <!-- macOS-style Button styles - very compact like macOS -->
        <Style x:Key="MacOSButton" TargetType="Button">
            <Setter Property="Background" Value="#626260"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,4"/>
            <Setter Property="Margin" Value="3,1"/>
            <!-- Slightly bolder than normal, but not bold -->
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="MinWidth" Value="60"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4" 
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"
                                            Margin="0,-1,0,1"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource HoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource PressedBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#5C5C5C"/>
                                <Setter Property="Foreground" Value="#CCCCCC"/>
                                <Setter Property="Opacity" Value="0.85"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SecondaryMacOSButton" TargetType="Button" BasedOn="{StaticResource MacOSButton}">
            <Setter Property="Background" Value="#626260"/>
        </Style>
        
        <!-- Circular icon buttons -->
        <Style x:Key="CircularIconButton" TargetType="Button">
            <Setter Property="Background" Value="#626260"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="12"
                                BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#777777"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#555555"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#5C5C5C"/>
                                <Setter Property="Opacity" Value="0.85"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Settings-specific ComboBox Style with gray colors -->
        <Style x:Key="SettingsComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="#5C5C5B"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}"
                                        Foreground="{TemplateBinding Foreground}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="6">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="20"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Grid.Column="0"
                                                            Name="ContentSite"
                                                            IsHitTestVisible="False"
                                                            Content="{TemplateBinding Content}"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                            Margin="6,0,3,0"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Left"/>
                                            <Path Grid.Column="1"
                                                  Name="Arrow"
                                                  Fill="{TemplateBinding Foreground}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                            </ToggleButton>
                            
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="200">
                                    <Border Background="{StaticResource DropdownBackgroundBrush}"
                                            BorderBrush="{StaticResource BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="6">
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource SettingsAccentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource SettingsAccentBrush}"/>
                                <Setter Property="Background" Value="#404040"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Settings-specific ComboBoxItem Style -->
        <Style x:Key="SettingsComboBoxItem" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="6,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" Value="{StaticResource SelectionBrush}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource SelectionBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Dark Window Style -->
        <Style TargetType="Window">
            <Setter Property="Background" Value="{StaticResource WindowBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        </Style>
        
        <!-- Removed global ScrollBar style; styling is applied locally per window/control. -->

        <!-- Dark Menu Style -->
        <Style TargetType="Menu">
            <Setter Property="Background" Value="{StaticResource SidebarBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        </Style>
        
        <Style TargetType="MenuItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border Name="Border" Background="{TemplateBinding Background}" BorderThickness="0" Padding="8,4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                    <ColumnDefinition Width="13"/>
                                </Grid.ColumnDefinitions>
                                
                                <ContentPresenter Grid.Column="0" x:Name="Icon" Margin="6,0,6,0" VerticalAlignment="Center" ContentSource="Icon"/>
                                <ContentPresenter Grid.Column="1" x:Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True"/>
                                <TextBlock Grid.Column="2" x:Name="InputGestureText" Text="{TemplateBinding InputGestureText}" Margin="5,2,2,2" DockPanel.Dock="Right"/>
                                <Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ArrowPath" Fill="{TemplateBinding Foreground}" Data="M 0 0 L 0 7 L 4 3.5 Z"/>
                                
                                <Popup Name="Popup" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                    <Border Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource DropdownBackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="6">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter TargetName="Popup" Property="Placement" Value="Bottom"/>
                            </Trigger>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter TargetName="ArrowPath" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter TargetName="ArrowPath" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SettingsAccentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Dark CheckBox Style -->
        <Style x:Key="DarkCheckBox" TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="Background" Value="#444444"/>
            <Setter Property="BorderBrush" Value="#666666"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <Border Grid.Column="0" 
                                    x:Name="CheckBoxBorder"
                                    Width="16" Height="16"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="2"
                                    Margin="0,0,8,0"
                                    VerticalAlignment="Center">
                                <Path x:Name="CheckMark"
                                      Data="M 2 6 L 6 10 L 14 2"
                                      Stroke="White"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"/>
                            </Border>
                            
                            <ContentPresenter Grid.Column="1"
                                            VerticalAlignment="Center"
                                            Content="{TemplateBinding Content}"/>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="#777777"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#777777"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Dark TextBox Style for Parameters -->
        <Style x:Key="DarkParameterTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="#262524"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="MinHeight" Value="22"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Focusable="false"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"
                                        Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#777777"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                                <Setter Property="Background" Value="#262524"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Dark ComboBox Style for Parameters -->
        <Style x:Key="DarkParameterComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="#5C5C5B"/>
            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                        Grid.ColumnSpan="2"
                                        Focusable="false"
                                        IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Background="#5C5C5B"
                                                BorderBrush="{StaticResource BorderBrush}"
                                                BorderThickness="1"
                                                CornerRadius="6">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                
                                                <ContentPresenter x:Name="ContentSite"
                                                                Grid.Column="0"
                                                                Content="{Binding SelectionBoxItem, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                                ContentTemplate="{Binding SelectionBoxItemTemplate, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                                ContentTemplateSelector="{Binding ItemTemplateSelector, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                                Margin="8,2,24,2"
                                                                VerticalAlignment="Center"
                                                                HorizontalAlignment="Left"
                                                                TextElement.Foreground="White"/>
                                                
                                                <Path Grid.Column="1"
                                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                                      Fill="{StaticResource TextBrush}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Margin="0,0,8,0"/>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="200">
                                    <Border Background="{StaticResource DropdownBackgroundBrush}"
                                            BorderBrush="{StaticResource BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="6">
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto">
                                            <ScrollViewer.Resources>
                                                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                                    <Setter Property="Width" Value="8"/>
                                                    <Setter Property="Background" Value="#2B2B2B"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                <Grid>
                                                                    <Border Background="{TemplateBinding Background}" CornerRadius="4"/>
                                                                    <Track Name="PART_Track" IsDirectionReversed="true">
                                                                        <Track.Thumb>
                                                                            <Thumb>
                                                                                <Thumb.Template>
                                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                        <Border Background="#555555" CornerRadius="4" Margin="1"/>
                                                                                    </ControlTemplate>
                                                                                </Thumb.Template>
                                                                            </Thumb>
                                                                        </Track.Thumb>
                                                                    </Track>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ScrollViewer.Resources>
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#777777"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="Padding" Value="8,4"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBoxItem">
                                    <Border Background="{TemplateBinding Background}"
                                            CornerRadius="3"
                                            Margin="2">
                                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource SelectionBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{StaticResource SelectionBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Application.Resources>
</Application>
